#include <iostream>
#include <chrono>
#include <thread>
#include "qpOASES_interface.h"
#include "tinyMpc_interface.h"
#include "quadprog_interface.h"
#include "osqp_interface.h"
#include "model_fit.h"

/*MPC模型参数*/
double model_A[4 * 10 * 10] = {
1.000000e+00,-1.394936e-14,5.045869e-14,-5.857560e-14,
5.000000e-03,-1.519882e-16,5.497832e-16,-6.382226e-16,
0,0,0,0,
0,0,0,0,
-4.866936e-04,-9.586914e-03,2.821799e-02,-2.845576e-02,
-8.076119e-07,-1.597869e-05,4.699994e-05,-4.737916e-05,
-4.866936e-04,-9.586914e-03,2.821799e-02,-2.845576e-02,
-8.076119e-07,-1.597869e-05,4.699994e-05,-4.737916e-05,
-1.006339e-05,9.936453e-05,-2.881615e-04,2.876795e-04,
-1.677967e-08,1.654827e-07,-4.796981e-07,4.787824e-07,
0,0,0,0,
1.000000e+00,-1.394936e-14,5.045869e-14,-5.857560e-14,
0,0,0,0,
0,0,0,0,
-1.968069e-01,-3.834452e+00,1.130520e+01,-1.141055e+01,
-4.866936e-04,-9.586914e-03,2.821799e-02,-2.845576e-02,
-1.968069e-01,-3.834452e+00,1.130520e+01,-1.141055e+01,
-4.866936e-04,-9.586914e-03,2.821799e-02,-2.845576e-02,
-4.020929e-03,3.982067e-02,-1.156074e-01,1.154820e-01,
-1.006339e-05,9.936453e-05,-2.881615e-04,2.876795e-04,
0,0,0,0,
0,0,0,0,
1.000000e+00,-1.394936e-14,5.045869e-14,-5.857560e-14,
5.000000e-03,-1.519882e-16,5.497832e-16,-6.382226e-16,
-2.954283e-04,1.965752e-04,-5.802528e-04,5.865981e-04,
-4.921964e-07,3.263630e-07,-9.635552e-07,9.741709e-07,
2.954283e-04,-1.965752e-04,5.802528e-04,-5.865981e-04,
4.921964e-07,-3.263630e-07,9.635552e-07,-9.741709e-07,
-3.836258e-24,4.295173e-23,-1.722211e-22,2.233960e-22,
-1.505215e-26,1.688509e-25,-6.206358e-25,7.410268e-25,
0,0,0,0,
0,0,0,0,
0,0,0,0,
1.000000e+00,-1.394936e-14,5.045869e-14,-5.857560e-14,
-1.182818e-01,7.938756e-02,-2.342212e-01,2.367352e-01,
-2.954283e-04,1.965752e-04,-5.802528e-04,5.865981e-04,
1.182818e-01,-7.938756e-02,2.342212e-01,-2.367352e-01,
2.954283e-04,-1.965752e-04,5.802528e-04,-5.865981e-04,
-3.296413e-21,3.544128e-20,-1.318609e-19,1.596200e-19,
-1.168820e-23,1.344782e-22,-5.020058e-22,6.041191e-22,
0,0,0,0,
0,0,0,0,
0,0,0,0,
0,0,0,0,
1.021398e+00,-9.980308e-02,2.144556e-01,-1.747892e-01,
5.035599e-03,-1.659027e-04,3.563104e-04,-2.903030e-04,
1.555921e-02,-6.042192e-02,1.051762e-01,-6.730234e-02,
2.586976e-05,-1.002873e-04,1.742390e-04,-1.112212e-04,
-6.168783e-05,1.535697e-05,5.045151e-04,-8.059823e-04,
-1.025543e-07,2.425749e-08,8.433990e-07,-1.344934e-06,
0,0,0,0,
0,0,0,0,
0,0,0,0,
0,0,0,0,
8.597959e+00,-4.018301e+01,8.645247e+01,-7.052400e+01,
1.021398e+00,-9.980308e-02,2.144556e-01,-1.747892e-01,
6.261080e+00,-2.441864e+01,4.270426e+01,-2.749142e+01,
1.555921e-02,-6.042192e-02,1.051762e-01,-6.730234e-02,
-2.483055e-02,6.946543e-03,2.002784e-01,-3.214115e-01,
-6.168783e-05,1.535697e-05,5.045151e-04,-8.059823e-04,
0,0,0,0,
0,0,0,0,
0,0,0,0,
0,0,0,0,
1.555921e-02,-6.042192e-02,1.051762e-01,-6.730234e-02,
2.586976e-05,-1.002873e-04,1.742390e-04,-1.112212e-04,
1.021398e+00,-9.980308e-02,2.144556e-01,-1.747892e-01,
5.035599e-03,-1.659027e-04,3.563104e-04,-2.903030e-04,
-6.168783e-05,1.535697e-05,5.045151e-04,-8.059823e-04,
-1.025543e-07,2.425749e-08,8.433990e-07,-1.344934e-06,
0,0,0,0,
0,0,0,0,
0,0,0,0,
0,0,0,0,
6.261080e+00,-2.441864e+01,4.270426e+01,-2.749142e+01,
1.555921e-02,-6.042192e-02,1.051762e-01,-6.730234e-02,
8.597959e+00,-4.018301e+01,8.645247e+01,-7.052400e+01,
1.021398e+00,-9.980308e-02,2.144556e-01,-1.747892e-01,
-2.483055e-02,6.946543e-03,2.002784e-01,-3.214115e-01,
-6.168783e-05,1.535697e-05,5.045151e-04,-8.059823e-04,
0,0,0,0,
0,0,0,0,
0,0,0,0,
0,0,0,0,
3.560826e-05,-1.695447e-03,4.916445e-03,-4.907927e-03,
5.947606e-08,-2.823612e-06,8.184323e-06,-8.168213e-06,
3.560826e-05,-1.695447e-03,4.916445e-03,-4.907927e-03,
5.947606e-08,-2.823612e-06,8.184323e-06,-8.168213e-06,
1.000271e+00,1.314246e-05,-3.726309e-05,3.661317e-05,
5.000451e-03,2.188119e-08,-6.201686e-08,6.092231e-08,
0,0,0,0,
0,0,0,0,
0,0,0,0,
0,0,0,0,
1.416574e-02,-6.794580e-01,1.972430e+00,-1.970172e+00,
3.560826e-05,-1.695447e-03,4.916445e-03,-4.907927e-03,
1.416574e-02,-6.794580e-01,1.972430e+00,-1.970172e+00,
3.560826e-05,-1.695447e-03,4.916445e-03,-4.907927e-03,
1.083541e-01,5.270732e-03,-1.495823e-02,1.470508e-02,
1.000271e+00,1.314246e-05,-3.726309e-05,3.661317e-05,
};
double model_B[4 * 10 * 4] = {
2.415160e-04,9.055450e-04,-3.285390e-03,3.640436e-03,
2.415160e-04,9.055450e-04,-3.285390e-03,3.640436e-03,
-1.495879e-04,6.418049e-04,-1.270011e-03,9.539925e-04,
-1.495879e-04,6.418049e-04,-1.270011e-03,9.539925e-04,
9.726564e-02,3.600700e-01,-1.311745e+00,1.455945e+00,
9.726564e-02,3.600700e-01,-1.311745e+00,1.455945e+00,
-6.014683e-02,2.588021e-01,-5.132867e-01,3.863600e-01,
-6.014683e-02,2.588021e-01,-5.132867e-01,3.863600e-01,
-9.919929e-05,-3.013914e-04,8.221370e-04,-7.996862e-04,
9.919929e-05,3.013914e-04,-8.221370e-04,7.996862e-04,
-4.245709e-05,2.715190e-04,-7.316769e-04,7.066487e-04,
4.245709e-05,-2.715190e-04,7.316769e-04,-7.066487e-04,
-3.967821e-02,-1.205873e-01,3.289661e-01,-3.199983e-01,
3.967821e-02,1.205873e-01,-3.289661e-01,3.199983e-01,
-1.699311e-02,1.086956e-01,-2.929380e-01,2.829349e-01,
1.699311e-02,-1.086956e-01,2.929380e-01,-2.829349e-01,
-5.147117e-03,2.996434e-02,-7.449130e-02,6.761911e-02,
-5.061631e-03,2.825454e-02,-6.833199e-02,6.078664e-02,
2.367332e-03,-1.833370e-02,5.220680e-02,-5.147798e-02,
1.819063e-03,-1.366435e-02,3.807222e-02,-3.694304e-02,
-2.068616e+00,1.205813e+01,-2.999479e+01,2.723704e+01,
-2.034426e+00,1.137414e+01,-2.753069e+01,2.450355e+01,
9.505587e-01,-7.364651e+00,2.097606e+01,-2.068583e+01,
7.311437e-01,-5.495886e+00,1.531893e+01,-1.486835e+01,
-5.061631e-03,2.825454e-02,-6.833199e-02,6.078664e-02,
-5.147117e-03,2.996434e-02,-7.449130e-02,6.761911e-02,
1.819063e-03,-1.366435e-02,3.807222e-02,-3.694304e-02,
2.367332e-03,-1.833370e-02,5.220680e-02,-5.147798e-02,
-2.034426e+00,1.137414e+01,-2.753069e+01,2.450355e+01,
-2.068616e+00,1.205813e+01,-2.999479e+01,2.723704e+01,
7.311437e-01,-5.495886e+00,1.531893e+01,-1.486835e+01,
9.505587e-01,-7.364651e+00,2.097606e+01,-2.068583e+01,
-1.941725e-05,2.743198e-04,-8.719192e-04,9.125158e-04,
-1.941725e-05,2.743198e-04,-8.719192e-04,9.125158e-04,
-4.626330e-05,3.080648e-07,7.536789e-05,-1.172152e-04,
-4.626330e-05,3.080648e-07,7.536789e-05,-1.172152e-04,
-7.732968e-03,1.098244e-01,-3.495088e-01,3.660110e-01,
-7.732968e-03,1.098244e-01,-3.495088e-01,3.660110e-01,
-1.852759e-02,2.331256e-04,2.994202e-02,-4.675787e-02,
-1.852759e-02,2.331256e-04,2.994202e-02,-4.675787e-02,
};
double model_K[4 * 4 * 10] = {
-1.065673e-04,-2.272152e-03,5.311686e-03,-4.550664e-03,
-3.371490e-01,-7.185938e+00,1.679833e+01,-1.439147e+01,
-5.791408e-04,-6.764809e-04,3.566668e-03,-3.500909e-03,
-9.157289e-01,-1.069717e+00,5.639912e+00,-5.535805e+00,
-2.388255e+00,-2.330400e+01,9.382635e+01,-7.027203e+01,
2.628348e-03,-2.978553e+00,7.907791e+00,-1.681424e+00,
8.593263e-01,-3.962972e+01,3.474056e+01,-3.815694e+01,
2.385827e-02,-1.235443e-01,-9.240346e+00,3.437016e+00,
-1.550351e+01,5.844325e+01,-1.088377e+02,8.046228e+01,
-1.631503e+00,5.803211e+00,-1.104417e+01,8.437675e+00,
-1.065673e-04,-2.272152e-03,5.311686e-03,-4.550665e-03,
-3.371490e-01,-7.185938e+00,1.679833e+01,-1.439147e+01,
5.791408e-04,6.764809e-04,-3.566668e-03,3.500909e-03,
9.157289e-01,1.069717e+00,-5.639912e+00,5.535805e+00,
8.593263e-01,-3.962972e+01,3.474056e+01,-3.815694e+01,
2.385827e-02,-1.235443e-01,-9.240346e+00,3.437016e+00,
-2.388255e+00,-2.330400e+01,9.382635e+01,-7.027203e+01,
2.628348e-03,-2.978553e+00,7.907791e+00,-1.681424e+00,
-1.550351e+01,5.844325e+01,-1.088377e+02,8.046228e+01,
-1.631503e+00,5.803211e+00,-1.104417e+01,8.437675e+00,
6.637680e-04,-8.733143e-04,-1.904793e-03,3.974064e-03,
2.099542e+00,-2.763317e+00,-6.021037e+00,1.256577e+01,
-9.381508e-04,9.076818e-03,-1.613870e-02,1.234235e-02,
-1.483413e+00,1.435230e+01,-2.551720e+01,1.951427e+01,
9.373660e+00,1.101587e+02,-4.684431e+01,1.103823e+01,
-3.852971e-02,9.129084e+00,2.441215e+01,-1.916335e+01,
5.982420e-01,-9.963624e+01,-2.919320e+01,8.366326e+01,
2.873293e-01,-5.693201e+00,-3.361306e+01,2.756080e+01,
-1.782634e+01,-1.241320e+02,3.124392e+02,-2.830730e+02,
-1.593020e+00,-1.072736e+01,2.519544e+01,-2.181701e+01,
6.637680e-04,-8.733142e-04,-1.904793e-03,3.974065e-03,
2.099542e+00,-2.763317e+00,-6.021037e+00,1.256577e+01,
9.381508e-04,-9.076818e-03,1.613870e-02,-1.234235e-02,
1.483413e+00,-1.435230e+01,2.551720e+01,-1.951427e+01,
5.982420e-01,-9.963624e+01,-2.919320e+01,8.366326e+01,
2.873293e-01,-5.693201e+00,-3.361306e+01,2.756080e+01,
9.373660e+00,1.101587e+02,-4.684431e+01,1.103823e+01,
-3.852971e-02,9.129084e+00,2.441215e+01,-1.916335e+01,
-1.782634e+01,-1.241320e+02,3.124392e+02,-2.830730e+02,
-1.593020e+00,-1.072736e+01,2.519544e+01,-2.181701e+01,
};
double model_P[4 * 10 * 10] = {
6.326311e+00,-4.220728e-03,1.339189e-02,-1.311968e-02,
5.537012e+00,-1.335000e+01,4.235810e+01,-4.149725e+01,
1.566576e-09,-1.630369e-08,5.476932e-08,-5.910488e-08,
1.776229e-10,-1.983346e-09,6.898135e-09,-7.455371e-09,
4.090963e-01,5.087748e+00,3.654469e+00,-3.608412e+00,
8.016690e-02,1.424404e+00,1.608602e+00,-6.233837e-01,
4.090963e-01,5.087748e+00,3.654469e+00,-3.608411e+00,
8.016690e-02,1.424404e+00,1.608602e+00,-6.233836e-01,
2.256939e+00,-9.405576e+00,2.303381e+01,-2.129164e+01,
7.500316e-01,-3.610917e+00,9.743541e+00,-9.377257e+00,
5.537012e+00,-1.335000e+01,4.235810e+01,-4.149725e+01,
1.756387e+04,-4.223485e+04,1.340029e+05,-1.312796e+05,
-1.349391e-09,1.555695e-08,-5.772102e-08,6.918078e-08,
3.996514e-09,-5.797767e-08,1.701800e-07,-8.907863e-08,
1.295678e+03,1.612093e+04,1.146821e+04,-1.132083e+04,
2.536084e+02,4.504819e+03,5.088211e+03,-1.971992e+03,
1.295678e+03,1.612093e+04,1.146821e+04,-1.132083e+04,
2.536084e+02,4.504819e+03,5.088211e+03,-1.971992e+03,
7.138310e+03,-2.974985e+04,7.285776e+04,-6.734801e+04,
2.372362e+03,-1.142198e+04,3.082100e+04,-2.966257e+04,
1.566576e-09,-1.630369e-08,5.476932e-08,-5.910488e-08,
-1.349391e-09,1.555695e-08,-5.772102e-08,6.918078e-08,
3.162393e+00,-1.965589e-04,1.075633e-03,-7.136239e-04,
1.742452e-01,-3.108911e-01,1.701139e+00,-1.128676e+00,
1.278228e-01,-3.321983e+00,2.783762e+01,-9.004313e+00,
2.822279e-02,-4.361142e-01,2.485175e+00,2.207755e+00,
-1.278228e-01,3.321983e+00,-2.783762e+01,9.004313e+00,
-2.822279e-02,4.361142e-01,-2.485175e+00,-2.207755e+00,
-2.245077e-09,3.069607e-08,-1.289630e-07,1.690633e-07,
-3.087469e-10,3.995710e-09,-1.616663e-08,2.063810e-08,
1.776229e-10,-1.983346e-09,6.898135e-09,-7.455371e-09,
3.996514e-09,-5.797767e-08,1.701800e-07,-8.907863e-08,
1.742452e-01,-3.108911e-01,1.701139e+00,-1.128676e+00,
2.880165e+02,-4.916103e+02,2.689977e+03,-1.784647e+03,
2.023921e+02,-5.253481e+03,4.401958e+04,-1.423583e+04,
4.462752e+01,-6.896005e+02,3.929488e+03,3.491875e+03,
-2.023921e+02,5.253481e+03,-4.401958e+04,1.423583e+04,
-4.462752e+01,6.896005e+02,-3.929488e+03,-3.491875e+03,
3.120542e-07,-4.497287e-06,1.968277e-05,-2.623559e-05,
1.610419e-08,-2.324411e-07,1.004991e-06,-1.318616e-06,
4.090963e-01,5.087748e+00,3.654469e+00,-3.608412e+00,
1.295678e+03,1.612093e+04,1.146821e+04,-1.132083e+04,
1.278228e-01,-3.321983e+00,2.783762e+01,-9.004313e+00,
2.023921e+02,-5.253481e+03,4.401958e+04,-1.423583e+04,
6.918882e+03,-2.958739e+04,7.631191e+05,2.112064e+05,
4.523358e+02,-6.798938e+03,5.679240e+04,1.705920e+05,
-2.695026e+03,6.134865e+04,-6.785044e+05,-2.635644e+05,
-3.995094e+02,7.657148e+03,-3.479056e+04,-1.721618e+05,
2.697758e+03,7.387829e+03,-2.808891e+04,3.037800e+04,
4.745119e+02,5.025615e+02,-7.154938e+02,9.241536e+02,
8.016690e-02,1.424404e+00,1.608602e+00,-6.233837e-01,
2.536084e+02,4.504819e+03,5.088211e+03,-1.971992e+03,
2.822279e-02,-4.361142e-01,2.485175e+00,2.207755e+00,
4.462752e+01,-6.896005e+02,3.929488e+03,3.491875e+03,
4.523358e+02,-6.798938e+03,5.679240e+04,1.705920e+05,
-3.665061e+01,1.015380e+03,-6.205388e+03,5.317248e+04,
-3.995094e+02,7.657148e+03,-3.479056e+04,-1.721618e+05,
4.779725e+01,-9.087654e+02,1.168761e+04,-5.021820e+04,
1.411623e+02,1.951084e+03,-2.648788e+03,2.103258e+03,
5.616427e+01,3.005804e+02,3.127993e+01,-9.550850e+00,
4.090963e-01,5.087748e+00,3.654469e+00,-3.608411e+00,
1.295678e+03,1.612093e+04,1.146821e+04,-1.132083e+04,
-1.278228e-01,3.321983e+00,-2.783762e+01,9.004313e+00,
-2.023921e+02,5.253481e+03,-4.401958e+04,1.423583e+04,
-2.695026e+03,6.134865e+04,-6.785044e+05,-2.635644e+05,
-3.995094e+02,7.657148e+03,-3.479056e+04,-1.721618e+05,
6.918882e+03,-2.958739e+04,7.631191e+05,2.112064e+05,
4.523358e+02,-6.798938e+03,5.679240e+04,1.705920e+05,
2.697758e+03,7.387829e+03,-2.808891e+04,3.037800e+04,
4.745119e+02,5.025615e+02,-7.154938e+02,9.241536e+02,
8.016690e-02,1.424404e+00,1.608602e+00,-6.233836e-01,
2.536084e+02,4.504819e+03,5.088211e+03,-1.971992e+03,
-2.822279e-02,4.361142e-01,-2.485175e+00,-2.207755e+00,
-4.462752e+01,6.896005e+02,-3.929488e+03,-3.491875e+03,
-3.995094e+02,7.657148e+03,-3.479056e+04,-1.721618e+05,
4.779725e+01,-9.087654e+02,1.168761e+04,-5.021820e+04,
4.523358e+02,-6.798938e+03,5.679240e+04,1.705920e+05,
-3.665061e+01,1.015380e+03,-6.205388e+03,5.317248e+04,
1.411623e+02,1.951084e+03,-2.648788e+03,2.103259e+03,
5.616427e+01,3.005804e+02,3.127993e+01,-9.550845e+00,
2.256939e+00,-9.405576e+00,2.303381e+01,-2.129164e+01,
7.138310e+03,-2.974985e+04,7.285776e+04,-6.734801e+04,
-2.245077e-09,3.069607e-08,-1.289630e-07,1.690633e-07,
3.120542e-07,-4.497287e-06,1.968277e-05,-2.623559e-05,
2.697758e+03,7.387829e+03,-2.808891e+04,3.037800e+04,
1.411623e+02,1.951084e+03,-2.648788e+03,2.103258e+03,
2.697758e+03,7.387829e+03,-2.808891e+04,3.037800e+04,
1.411623e+02,1.951084e+03,-2.648788e+03,2.103259e+03,
1.215672e+05,-1.380275e+05,3.861456e+05,-3.731801e+05,
7.386067e+03,-1.725852e+04,4.793187e+04,-4.637565e+04,
7.500316e-01,-3.610917e+00,9.743541e+00,-9.377257e+00,
2.372362e+03,-1.142198e+04,3.082100e+04,-2.966257e+04,
-3.087469e-10,3.995710e-09,-1.616663e-08,2.063810e-08,
1.610419e-08,-2.324411e-07,1.004991e-06,-1.318616e-06,
4.745119e+02,5.025615e+02,-7.154938e+02,9.241536e+02,
5.616427e+01,3.005804e+02,3.127993e+01,-9.550850e+00,
4.745119e+02,5.025615e+02,-7.154938e+02,9.241536e+02,
5.616427e+01,3.005804e+02,3.127993e+01,-9.550845e+00,
7.386067e+03,-1.725852e+04,4.793187e+04,-4.637565e+04,
9.430366e+02,-3.411732e+03,9.580426e+03,-9.377007e+03,
};

double Q[10] = {
    0.00001,
    100,
    0.00001,
    25,
    500,
    1.,
    500,
    1.,
    5000,
    0.5
};
double R[4] = {
    12,
    12,
    2,
    2
};

double F[10];
double W[4] = {1e-6,1e-6,1e-6,1e-6};
double lb[4] = { -4.5,-4.5,-40,-40 };
double ub[4] = { 4.5, 4.5, 40, 40 };

int main()
{
    // qpoasesInterface mpcCal(10,4,4,0,2);// qpOASES
    // tinympcInterface mpcCal(10, 4, 4, 0, 3, 1., 1);// tinyMPC
    // quadprogInterface mpcCal(10, 4, 4, 0, 10);//qp++
    osqpInterface mpcCal(10, 4, 4, 0, 2,0,0);//osqp
    Eigen::Vector<double,10> X = Eigen::Vector<double,10>::Constant(0);
    Eigen::Vector<double,10> Y = Eigen::Vector<double,10>::Constant(0);
    Y(1) = 2.;
    X(8) = -0.1;
    double avc_length = 0.2;
    modelFit<10, 10, 3> fitA;
    modelFit<10, 4, 3> fitB;
    modelFit<4, 10, 3> fitK;
    modelFit<10, 10, 3> fitP;
    fitA.setFunctions(model_A);
    fitB.setFunctions(model_B);
    fitK.setFunctions(model_K);
    fitP.setFunctions(model_P);
    Eigen::MatrixXd A = fitA.modelGenerateMat(avc_length);
    Eigen::MatrixXd B = fitB.modelGenerateMat(avc_length);
    Eigen::MatrixXd K = fitK.modelGenerateMat(avc_length);
    Eigen::MatrixXd P = fitP.modelGenerateMat(avc_length);
    Eigen::VectorXd Qv = Eigen::Map<Eigen::Vector<double, 10>>(Q);
    Eigen::VectorXd Rv = Eigen::Map<Eigen::Vector<double, 4>>(R);
    Eigen::VectorXd Fv = Qv;
    Eigen::VectorXd Wv = Eigen::Map<Eigen::Vector<double, 4>>(W);
    Eigen::VectorXd lbv = Eigen::Map<Eigen::Vector<double, 4>>(lb);
    Eigen::VectorXd ubv = Eigen::Map<Eigen::Vector<double, 4>>(ub);
    Eigen::VectorXd Albv = lbv;
    Eigen::VectorXd Aubv = ubv;
    Eigen::MatrixXd cA;
    mpcCal.mpcInit(A,B,Qv.asDiagonal(),P,Rv.asDiagonal(),Wv.asDiagonal(),0);
    while(1)
    {
        // 记录开始时间
        auto start = std::chrono::high_resolution_clock::now();
        A = fitA.modelGenerateMat(avc_length);
        B = fitB.modelGenerateMat(avc_length);
        K = fitK.modelGenerateMat(avc_length);
        P = fitP.modelGenerateMat(avc_length);
        // // 记录结束时间
        // auto end = std::chrono::high_resolution_clock::now();
        mpcCal.setStateSpace(A,B,0);
        cA.resize(4, 4);
        cA.setIdentity();
        // // 记录开始时间
        // auto start = std::chrono::high_resolution_clock::now();

        mpcCal.setInputConstrain(lbv,ubv);
        mpcCal.setIeqConstrain(cA,Albv,Aubv);
        mpcCal.setLqrFeedback(K,P);
        mpcCal.mpcUpdate(Y,X,50,2e-3);
        // // 记录开始时间
        // auto start = std::chrono::high_resolution_clock::now();
        mpcCal.mpcSolve();
        Eigen::VectorXd output = mpcCal.getOutput();
        // 记录结束时间
        auto end = std::chrono::high_resolution_clock::now();
        // 计算时间差（单位：毫秒）
        auto duration = std::chrono::duration_cast<std::chrono::microseconds>(end - start).count();
        std::cout << "runtime: " << duration << " us" << std::endl;
        std::cout << "output: " << output.transpose() << std::endl;
        std::this_thread::sleep_for(std::chrono::milliseconds(500)); // 暂停1秒
    }
    return 0;
}

